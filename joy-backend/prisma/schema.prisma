// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Inventaris {
  id          Int     @id @default(autoincrement())
  nama_barang String  
  quantity    Int
  satuan      String
}

model Material {
  id                Int              @id @default(autoincrement())
  kode_material     String           @unique
  nama_material     String
  satuan            String
  quantity          Int            @default(0)
  movements         MaterialMovement[]
  productMaterials  ProductMaterial[]
}

model MaterialMovement {
  id          Int      @id @default(autoincrement())
  material_id Int
  quantity    Int
  date        DateTime @default(now())
  type        MovementType

  material    Material @relation(fields: [material_id], references: [id])
}

model Product {
  id              Int              @id @default(autoincrement())
  kode_produk     String           @unique
  nama_produk     String
  deskripsi       String
  productMaterials ProductMaterial[]
  orderProducts OrderProduct[]
}

model ProductMaterial {
  id          Int      @id @default(autoincrement())
  product_id  Int
  material_id Int
  quantity    Int

  product     Product @relation(fields: [product_id], references: [id])
  material    Material @relation(fields: [material_id], references: [id])
}

model Order {
  id            Int       @id @default(autoincrement())
  nama_pemesan  String
  kode_pesanan  String    @unique
  status        StatusOrder @default(PROCESSING)    
  estimatedTime DateTime
  totalHarga    Float
  orderProducts OrderProduct[]
  invoices      Invoice[]
}

model OrderProduct {
  id         Int     @id @default(autoincrement())
  order_id   Int
  product_id Int

  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
}

model Invoice {
  id       Int   @id @default(autoincrement())
  order_id Int
  order    Order @relation(fields: [order_id], references: [id])
}

enum StatusOrder {
  PROCESSING
  CANCELLED
  DONE
}

enum MovementType {
  MASUK
  KELUAR
}

enum Role {
  ADMIN
  STAFF_GUDANG
}
